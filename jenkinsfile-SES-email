pipeline{
    agent any
    tools{
        maven 'maven-3.8.4'
    }
    environment {
    registry = '137827796096.dkr.ecr.us-east-1.amazonaws.com/myrepo'
    registryCredential = 'jenkins-ecr-credentials'
    dockerImage = ''
  }
    stages{
        stage('checkout the code'){
            steps{
                git url:'https://github.com/bcreddydevops/springboot-maven-course-micro-svc.git', branch: 'master'
            }
        }
        stage('build the code'){
            steps{
                sh 'mvn clean package'
            }
        }
        stage("sonar quality check"){
            steps{
                script{
                    withSonarQubeEnv(installationName: 'sonarqube-9', credentialsId: 'jenkins-sonar-token') {
                            sh 'mvn sonar:sonar '
                    }

                    timeout(time: 1, unit: 'HOURS') {
                      def qg = waitForQualityGate()
                      if (qg.status != 'OK') {
                           error "Pipeline aborted due to quality gate failure: ${qg.status}"
                      }
                    }

                }  
            }
        }
        stage('Building image') {
      steps{
        script {
          dockerImage = docker.build registry + ":$BUILD_NUMBER"
        }
      }
    }
    stage('Deploy image') {
        steps{
            script{
                docker.withRegistry("https://"+registry,"ecr:us-east-1:"+registryCredential) {
                    dockerImage.push()
                }
            }
        }
    }
    }
    post {
        success {
            mail bcc: '', body: 'Pipeline finsihed successfully', cc: '', from: 'bcreddydevops@gmail.com', replyTo: '', subject: 'The Pipeline success', to: 'bcreddydevops@gmail.com'
        }
        failure {  
            mail bcc: '', body: 'Pipeline failed', cc: '', from: 'bcreddydevops@gmail.com', replyTo: '', subject: 'The Pipeline failed', to: 'bcreddydevops@gmail.com'
         } 
    }
}
